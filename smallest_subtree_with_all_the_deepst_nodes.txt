int maxDepth =-1;
    TreeNode* deepestNode = NULL;
    int solver(TreeNode *root,int level)
    {  
        
        if(root==NULL)
        {
            return 0;
        }
        level++;
        maxDepth = max(maxDepth,level);
        if(root->left==NULL && root->right==NULL)
        {
            if(level == maxDepth)
            {   
                cout<<root->val<<" "<<level<<endl;
                maxDepth = level;
                deepestNode = root;
            }
            return level;
        }
   
           int left = solver(root->left,level);
           int right = solver(root->right,level);

           if(left == right && left == maxDepth)
           { 
              maxDepth = left;
              deepestNode = root;
           }
           return max(left,right);
         
    }
    TreeNode* subtreeWithAllDeepest(TreeNode* root) {
       solver(root,-1); 
       return deepestNode;
    }