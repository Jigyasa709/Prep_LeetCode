int solver(int x,int y,vector<vector<int>>& Grid,vector<vector<int>> &dp)
    {
        if(x<0 || x>Grid.size()-1 || y<0 || y>Grid[0].size()-1)
        return 0;
        
        if(Grid[x][y]==1)
        return 0;

        if(x==Grid.size()-1 && y==Grid[0].size()-1)
        return 1;
        
        if(dp[x][y]!=-1)
        return dp[x][y];

        int ans =0;

        ans += solver(x+1,y,Grid,dp)+solver(x,y+1,Grid,dp);
        dp[x][y] = ans;
        
        return dp[x][y];
    }
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
       int m = obstacleGrid.size();
       int n = obstacleGrid[0].size();

       vector<vector<int>> dp(m,vector<int>(n,-1));

      return solver(0,0,obstacleGrid,dp);
       
    }
