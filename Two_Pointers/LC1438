/*https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/description/
O(n2) --> brute force (TLE)
O(NlogN)--> multiset for checking difference between smallest and largest number in a particular window*/

int longestSubarray(vector<int>& nums, int limit) {
       multiset <int> ms;
       int start =0;
       int ans =0;

       for(int end=0;end<nums.size();end++)
       {
          ms.insert(nums[end]);
          
          while(*ms.rbegin()-*ms.begin() > limit)
          {
            ms.erase(ms.find(nums[start]));
            start++;
          }

          ans = max(ans,end-start+1);
       }

       return ans;
    }
