    TreeNode* solver(vector <int> &preorder,vector <int> &inorder,int PreStart,int PreEnd,int InStart,int InEnd)
    {
        if(PreStart > PreEnd)
        {
            return NULL;
        }
        
        int node = preorder[PreStart];
        TreeNode *root = new TreeNode(node);
        
        int index;

        for(int i=InStart; i<=InEnd;i++)
        {
            if(inorder[i]==node)
            {
                index = i;
                break;
            }
        }
        
        int left = index - InStart;

        root->left = solver(preorder,inorder,PreStart+1,PreStart+left,InStart,index-1);
        root->right = solver(preorder,inorder,PreStart+left+1,PreEnd,index+1,InEnd);

        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int n = preorder.size();
        return solver(preorder,inorder,0,n-1,0,n-1);
    }